{"version":3,"sources":["components/header/styles.js","components/header/index.js","styles/GlobalStyles.js","components/foodCategory/styles.js","Context.js","components/foodCategory/index.js","components/listFoodCategories/styles.js","components/listFoodCategories/index.js","components/listMeal/styles.js","components/meal/styles.js","components/meal/index.js","components/listMeal/index.js","page/Home.js","styles/FoodDetail.js","page/FoodDetail.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Top","styled","header","P","p","Titleh2","h2","Header","to","GlobalStyle","createGlobalStyle","Category","button","props","centrado","css","Img","div","img","TextCategory","FoodContext","createContext","FoodProvider","children","useState","meals","setMeals","loading","setLoading","useEffect","getMeals","name","a","fetch","response","json","data","Provider","value","FoodCategory","idCategory","strCategory","strCategoryThumb","strCategoryDescription","useContext","onClick","e","plate","target","handleCategory","src","alt","Categories","ListFoodCategories","ListCategories","setListCategories","getCategories","categories","console","log","map","item","List","MealContainer","Text","Meal","strMeal","strMealThumb","idMeal","ListMeal","Home","Wrapper","Title","Container","SubContainer","Spam","ul","ListText","Titleh3","h3","Preparation","FoodDetail","id","match","params","Detailid","food","setFood","getFood","width","strArea","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strIngredient6","strIngredient7","strIngredient8","strIngredient9","strIngredient10","strIngredient12","strIngredient13","strIngredient14","strIngredient15","strIngredient16","strIngredient17","strIngredient18","strIngredient19","strIngredient20","strMeasure1","strMeasure2","strMeasure3","strMeasure4","strMeasure5","strMeasure6","strMeasure7","strMeasure8","strMeasure9","strMeasure10","strMeasure12","strMeasure13","strMeasure14","strMeasure15","strMeasure16","strMeasure17","strMeasure18","strMeasure19","strMeasure20","strInstructions","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.da121424.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Top = styled.header`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const P = styled.p`\r\n  text-align: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Titleh2 = styled.h2`\r\n  margin-bottom: 14px;\r\n  font-size: 24px;\r\n  padding: 6px;\r\n  background: #09b44d;\r\n  color: white;\r\n  text-align: center;\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Titleh2, P, Top } from \"./styles\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <Top>\r\n      <Link to=\"/\">\r\n        <Titleh2>Fast Cook</Titleh2>\r\n      </Link>\r\n      <P>Discover and get great food recipes</P>\r\n    </Top>\r\n  );\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n          box-sizing: border-box;\r\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n  }\r\n  \r\n  *, *::before, *::after {\r\n          box-sizing: inherit;\r\n  }\r\n  \r\n  ul, li, h1, h2, h3, p, button {\r\n          margin: 0;\r\n  }\r\n\r\n  ul {\r\n          list-style: none;\r\n  }\r\n\r\n  a{\r\n          text-decoration: none;\r\n  }\r\n  button {\r\n          background: transparent;\r\n          border: 0;\r\n          outline: 0;\r\n  }\r\n\r\n  body {\r\n          background: #fefefe;\r\n          height: 100vh;\r\n          margin: 0 auto;\r\n          max-width: 400px;\r\n          overscroll-behavior: none;\r\n          width: 100%;\r\n  }\r\n\r\n  #root {\r\n          box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);\r\n          overflow-x: hidden;\r\n          min-height: 100vh;\r\n          padding-bottom: 10px;\r\n  }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const Category = styled.button`\r\n  width: 100px;\r\n  border-radius: 12px;\r\n  padding: 4px;\r\n  box-shadow: 4px 3px 13px -10px #666565;\r\n  margin: 4px 12px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n  ${(props) => props.centrado && css``}\r\n`;\r\nexport const ImgContainer = styled.div`\r\n  width: 100%;\r\n`;\r\nexport const Img = styled.img`\r\n  width: 100%;\r\n`;\r\nexport const TextCategory = styled.p`\r\n  margin: 4px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: #000000;\r\n`;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const FoodContext = createContext();\r\n\r\nexport const FoodProvider = ({ children }) => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getMeals();\r\n  }, []);\r\n\r\n  const getMeals = async (name) => {\r\n    setLoading(true);\r\n    if (!name) {\r\n      name = \"Beef\";\r\n    }\r\n    const response = await fetch(\r\n      `https://www.themealdb.com/api/json/v1/1/filter.php?c=${name}`\r\n    );\r\n    const data = await response.json();\r\n    setMeals(data.meals);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <FoodContext.Provider value={{ meals, getMeals, loading }}>\r\n      {children}\r\n    </FoodContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Category, Img, TextCategory } from \"./styles\";\r\nimport { FoodContext } from \"../../Context\";\r\nconst imagen = \"https://www.themealdb.com/images/category/beef.png\";\r\n\r\nexport const FoodCategory = (props) => {\r\n  const {\r\n    idCategory,\r\n    strCategory,\r\n    strCategoryDescription,\r\n    strCategoryThumb,\r\n  } = props;\r\n\r\n  const { getMeals } = useContext(FoodContext);\r\n\r\n  const handleCategory = (e) => {\r\n    const plate = e.target.name;\r\n    getMeals(plate);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Category\r\n        centrado={true}\r\n        onClick={(e) => handleCategory(e)}\r\n        name={strCategory}\r\n      >\r\n        <Img src={strCategoryThumb} alt=\"\" name={strCategory} />\r\n        <TextCategory name={strCategory}>{strCategory}</TextCategory>\r\n      </Category>\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Categories = styled.div`\r\n  display: flex;\r\n  margin-bottom: 18px;\r\n  margin-top: 18px;\r\n  overflow-x: scroll;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FoodCategory } from \"../foodCategory/index\";\r\nimport { Categories } from \"./styles\";\r\n\r\nexport const ListFoodCategories = () => {\r\n  const [ListCategories, setListCategories] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n\r\n  const getCategories = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        \"https://www.themealdb.com/api/json/v1/1/categories.php\"\r\n      );\r\n      const data = await response.json();\r\n      setListCategories(data.categories);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div>\r\n          <p>Cargando...</p>\r\n        </div>\r\n      ) : (\r\n        <Categories>\r\n          {ListCategories.map((item) => (\r\n            <FoodCategory key={item.idCategory} {...item} />\r\n          ))}\r\n        </Categories>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const List = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 34px;\r\n  padding: 12px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MealContainer = styled.div`\r\n  margin: 8 14px;\r\n  box-shadow: 4px 3px 13px -10px #666565;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 100%;\r\n  height: 180px;\r\n  display: flex;\r\n  border-top-left-radius: 8px;\r\n  border-top-right-radius: 8px;\r\n  margin: 0 auto;\r\n  cursor: pointer;\r\n`;\r\nexport const Text = styled.p`\r\n  text-align: center;\r\n  font-weight: 500;\r\n  padding: 4px 6px;\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MealContainer, Img, Text } from \"./styles\";\r\n\r\nexport const Meal = (props) => {\r\n  const { strMeal, strMealThumb, idMeal } = props;\r\n  return (\r\n    <>\r\n      <MealContainer>\r\n        <Link to={`/FoodDetail/${idMeal}`}>\r\n          <Img src={strMealThumb} alt=\"\" />\r\n        </Link>\r\n        <Text>{strMeal}</Text>\r\n      </MealContainer>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { List } from \"./styles\";\r\nimport { Meal } from \"../meal/index\";\r\nimport { FoodContext } from \"../../Context\";\r\nexport const ListMeal = () => {\r\n  const { meals, loading } = useContext(FoodContext);\r\n\r\n  return (\r\n    <List>\r\n      {loading ? (\r\n        <p>Cargando...</p>\r\n      ) : (\r\n        meals.map((item) => <Meal key={item.idMeal} {...item} />)\r\n      )}\r\n    </List>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ListFoodCategories } from \"../components/listFoodCategories/index\";\r\nimport { ListMeal } from \"../components/listMeal/index\";\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <div>\r\n      <ListFoodCategories />\r\n      <ListMeal />\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Img = styled.img`\r\n  width: 100%;\r\n  height: 285px;\r\n  border-radius: 35px;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  padding: 16px 18px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 28px;\r\n`;\r\n\r\nexport const SubContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Spam = styled.p`\r\n  font-size: 14px;\r\n  color: #09b44d;\r\n  font-weight: bold;\r\n  margin-right: 24px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  padding: 0;\r\n  white-space: nowrap;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const ListText = styled.p`\r\n  color: #444444;\r\n  font-weight: 500;\r\n  margin-right: 24px;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const Titleh3 = styled.h3`\r\n  margin-bottom: 20px;\r\n    font-size: 16px;\r\n    width: fit-content;\r\n    padding: 6px;\r\n    background: #09b44d;\r\n    color: white;\r\n    border-radius: 8px;\r\n}\r\n`;\r\n\r\nexport const Preparation = styled.p`\r\n  color: #444444;\r\n  font-weight: 500;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Wrapper,\r\n  Img,\r\n  Title,\r\n  Container,\r\n  SubContainer,\r\n  Spam,\r\n  List,\r\n  ListText,\r\n  Titleh3,\r\n  Preparation,\r\n} from \"../styles/FoodDetail\";\r\n\r\nexport const FoodDetail = (props) => {\r\n  const id = props.match.params.Detailid;\r\n  const [food, setFood] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getFood(id);\r\n  }, []);\r\n\r\n  const getFood = async (id) => {\r\n    setLoading(true);\r\n    const response = await fetch(\r\n      `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`\r\n    );\r\n    const data = await response.json();\r\n    setFood(data.meals[0]);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>Cargando... </p>\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <Img width=\"210px\" src={food.strMealThumb} alt=\"\" />\r\n          </div>\r\n          <Wrapper>\r\n            <Container>\r\n              <Title>{food.strMeal}</Title>\r\n              <SubContainer>\r\n                <Spam>{food.strArea}</Spam>\r\n                <Spam>{food.strCategory}</Spam>\r\n              </SubContainer>\r\n            </Container>\r\n            <Titleh3>Ingredients</Titleh3>\r\n            <List>\r\n              <ListText>{food.strIngredient1}</ListText>\r\n              <ListText>{food.strIngredient2}</ListText>\r\n              <ListText>{food.strIngredient3}</ListText>\r\n              <ListText>{food.strIngredient4}</ListText>\r\n              <ListText>{food.strIngredient5}</ListText>\r\n              <ListText>{food.strIngredient6}</ListText>\r\n              <ListText>{food.strIngredient7}</ListText>\r\n              <ListText>{food.strIngredient8}</ListText>\r\n              <ListText>{food.strIngredient9}</ListText>\r\n              <ListText>{food.strIngredient10}</ListText>\r\n              <ListText>{food.strIngredient12}</ListText>\r\n              <ListText>{food.strIngredient13}</ListText>\r\n              <ListText>{food.strIngredient14}</ListText>\r\n              <ListText>{food.strIngredient15}</ListText>\r\n              <ListText>{food.strIngredient16}</ListText>\r\n              <ListText>{food.strIngredient17}</ListText>\r\n              <ListText>{food.strIngredient18}</ListText>\r\n              <ListText>{food.strIngredient19}</ListText>\r\n              <ListText>{food.strIngredient20}</ListText>\r\n            </List>\r\n\r\n            <Titleh3>Measure</Titleh3>\r\n            <List>\r\n              <ListText>{food.strMeasure1}</ListText>\r\n              <ListText>{food.strMeasure2}</ListText>\r\n              <ListText>{food.strMeasure3}</ListText>\r\n              <ListText>{food.strMeasure4}</ListText>\r\n              <ListText>{food.strMeasure5}</ListText>\r\n              <ListText>{food.strMeasure6}</ListText>\r\n              <ListText>{food.strMeasure7}</ListText>\r\n              <ListText>{food.strMeasure8}</ListText>\r\n              <ListText>{food.strMeasure9}</ListText>\r\n              <ListText>{food.strMeasure10}</ListText>\r\n              <ListText>{food.strMeasure12}</ListText>\r\n              <ListText>{food.strMeasure13}</ListText>\r\n              <ListText>{food.strMeasure14}</ListText>\r\n              <ListText>{food.strMeasure15}</ListText>\r\n              <ListText>{food.strMeasure16}</ListText>\r\n              <ListText>{food.strMeasure17}</ListText>\r\n              <ListText>{food.strMeasure18}</ListText>\r\n              <ListText>{food.strMeasure19}</ListText>\r\n              <ListText>{food.strMeasure20}</ListText>\r\n            </List>\r\n            <Titleh3>Preparation</Titleh3>\r\n            <Preparation>{food.strInstructions}</Preparation>\r\n          </Wrapper>{\" \"}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Header } from \"./components/header/index\";\nimport { GlobalStyle } from \"./styles/GlobalStyles\";\nimport { Home } from \"./page/Home\";\nimport { FoodDetail } from \"./page/FoodDetail\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <BrowserRouter>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/FoodDetail/:Detailid\" component={FoodDetail} />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://cra.link/PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles//index.css\";\nimport App from \"./App\";\nimport { FoodProvider } from \"./Context\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <FoodProvider>\n      <App />\n    </FoodProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}